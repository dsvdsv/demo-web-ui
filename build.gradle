buildscript {
	ext {
		springBootVersion = '1.3.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "com.moowork.node" version "0.13"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'demo-web-ui'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

def generatedWebResources = "${buildDir}/generated-web-resources"
def webResources = file("${project.projectDir}/src/main/web")

sourceSets {
	main {
		output.dir(generatedWebResources)
	}
}

// configure gradle-node-plugin
node {
	version = '6.3.0'
	npmVersion = '3.10.5'
	download = true
	workDir = file("${webResources}/node")
	nodeModulesDir = webResources
}

npm_run_build {
	workingDir = webResources
}


jar.dependsOn(npm_run_build)